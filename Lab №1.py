# Написать программу, которая читая символы из бесконечной последовательности (эмулируется конечным файлом, читающимся поблочно),
# распознает, преобразует и выводит на экран лексемы по определенному правилу.
# Лексемы разделены пробелами.
# Преобразование делать по возможности через словарь.
# Для упрощения под выводом числа прописью подразумевается последовательный вывод всех цифр числа.
# Регулярные выражения использовать нельзя.
# Нечетные двоичные числа, не превышающие 4095(10), в которых встречается ровно одна серия из трех подряд идущих нуля.
# Выводит на экран цифры числа, исключая нули. Отдельно выводится прописью номер позиции, с которой начинается эта серия.
index_dict = {
    0: "ноль", 1: "один", 2: "два", 3: "три", 4: "четыре",
    5: "пять", 6: "шесть", 7: "семь", 8: "восемь", 9: "девять",
}

def extract_binary(part):
    binary = ''.join(c for c in part if c in '01')
    return binary if 0 < len(binary) <= 12 else None

def check_number(binary):
    num = int(binary, 2)
    return (num % 2 != 0 and num <= 4095 and binary.count('000') == 1, binary.find('000'))

def process_file(file_path):
    with open(file_path) as f:
        for line in f:
            for part in line.split():
                if binary := extract_binary(part):
                    valid, pos = check_number(binary)
                    if valid:
                        print(f"{binary.replace('0', '')} {index_dict.get(pos, pos)}")

process_file('numbers.txt')



